import jwt from 'jsonwebtoken';
import { logger } from '../utils/logger';

// IMPORTANT: Copy this file to jwt.ts and update the JWT_SECRET
// The JWT_SECRET should match the one in your .env file
// Generate a secure secret using: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
const JWT_SECRET = process.env.JWT_SECRET || 'your-super-secret-jwt-key-change-this-to-something-secure';
const JWT_EXPIRES_IN = process.env.JWT_EXPIRES_IN || '7d';

export interface JWTPayload {
  userId: string;
  username: string;
  role?: string;
}

export function generateToken(payload: JWTPayload): string {
  if (!process.env.JWT_SECRET) {
    logger.warn('JWT_SECRET not set in environment, using fallback');
  }
  return jwt.sign(payload, JWT_SECRET, {
    expiresIn: JWT_EXPIRES_IN
  });
}

export function verifyToken(token: string): JWTPayload {
  try {
    return jwt.verify(token, JWT_SECRET) as JWTPayload;
  } catch (error) {
    logger.error('Token verification failed:', error);
    throw error;
  }
}
